name: Deploy Frontend (frontend-react → S3 + CloudFront)

on:
  push:
    branches: [ main ]
    paths: [ 'frontend-react/**' ]
  workflow_dispatch:

concurrency:
  group: deploy-frontend
  cancel-in-progress: true

permissions:
  id-token: write      # OIDC
  contents: read

env:
  AWS_REGION:           ${{ vars.AWS_REGION }}
  S3_BUCKET:            ${{ vars.S3_BUCKET }}
  CF_DISTRIBUTION_ID:   ${{ vars.CF_DISTRIBUTION_ID }}
  AWS_ROLE_TO_ASSUME:   ${{ vars.AWS_ROLE_TO_ASSUME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend-react

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend-react/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build

      # ----- configuration（OIDC）-----
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          
      # ----- sync static resources（cache, exclude index.html）-----
      - name: Upload static assets (except index.html) with long cache
        shell: bash
        run: |
          aws s3 sync ./dist "s3://${{ env.S3_BUCKET }}/" \
            --delete \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable" \
            --no-progress

      # ----- upload index.html seperatly（no cache）-----
      - name: Upload index.html with no-cache
        shell: bash
        run: |
          aws s3 cp ./dist/index.html "s3://${{ env.S3_BUCKET }}/index.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --content-type "text/html" \
            --no-progress

      # ----- hanlde CloudFront invalid -----
      - name: Invalidate CloudFront
        if: ${{ env.CF_DISTRIBUTION_ID != '' }}
        shell: bash
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CF_DISTRIBUTION_ID}" \
            --paths "/index.html" "/"
